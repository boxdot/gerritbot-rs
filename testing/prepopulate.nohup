#!/bin/bash
user=${1:-$USER_NAME}

wait_for_gerrit() {
  echo "Waiting for Gerrit to be available on tcp:8080..."
  while ! nc -z localhost 8080; do   
    sleep 1 # wait for 1/10 of the second before check again
  done
  echo "Gerrit available!"
}

generate_ssh_key() {
  ssh_key="$HOME/.ssh/id_rsa${2}"
  if [ ! -f "$ssh_key" ]; then
    echo "SSH key has not yet been created, creating one for you..."
    ssh-keygen -t rsa -f $ssh_key -q -N ""
  fi

  echo -n "Uploading SSH public-key to Gerrit user ${1}: "
  curl -s --user admin:secret -X POST --url "http://localhost:8080/a/accounts/${1}/sshkeys" --data-binary "@${ssh_key}.pub"

  echo -n "Test if connection works: "
  ssh -i ${ssh_key} -o StrictHostKeyChecking=no -p 29418 ${1}@localhost gerrit version

  echo "Copying the key with open permissions for everyone to use (uhuh)"
  install -m 777 ${ssh_key} /root/data
  install -m 777 ${ssh_key}.pub /root/data
}

create_user() {
  echo -n "Creating user $1: "
  curl -s --user admin:secret -X PUT --url "http://localhost:8080/a/accounts/${1}" -H "Content-Type: application/json" --data "{\"name\": \"$1\", \"email\": \"$2\"}"
  generate_ssh_key $1 "_$1"
}

create_project() {
  echo -n "Creating project $1: "
  curl -s --user admin:secret -X PUT --url "http://localhost:8080/a/projects/${1}"
}

push_git_repo() {
  echo "Cloning the repo before doing some stuff on it, for Gerrit!"
  rm -rf /root/src
  mkdir -p /root/src
  pushd /root/src
  git clone file:///root/src.git .
  echo "Pushing repo to Gerrit"
  ssh-keyscan -t rsa -p 29418 localhost >> $HOME/.ssh/known_hosts
  git remote add gerrit ssh://admin@localhost:29418/gerritbot-rs
  git checkout master
  git push gerrit master:master
  echo "Adding Gerrit git hook and amending commit"
  gitdir=$(git rev-parse --git-dir); scp -p -P 29418 admin@localhost:hooks/commit-msg ${gitdir}/hooks/
  git config user.email "john.doe@localhost"
  git config user.name "John Doe"
  git commit --amend --no-edit
  echo "Pushing a review"
  git push gerrit HEAD:refs/for/master
  popd
}

# This script will run in the background inside the container
# so we need to wait for gerrit to start
wait_for_gerrit

# Generate a SSH key for the admin
generate_ssh_key admin

# Create some users to push comments
create_user jdoe john.doe@localhost
create_user aonymous anne.onymous@localhost

# Create project
create_project gerritbot-rs

# Push git repo
push_git_repo gerritbot-rs
